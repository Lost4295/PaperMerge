apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio 
  template:
    metadata:
      labels:
        app: minio 
    spec:
      containers:
        - name: minio
          image: minio/minio:latest
          ports:
            - containerPort: 9000
            - containerPort: 9001
          command: ["server", "--address", ":9001", "/data"]
          env:
            - name: MINIO-ROOT-USER
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: MINIO-ROOT-USER
            - name: MINIO-ROOT-PASSWORD
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: MINIO-ROOT-PASSWORD
          volumeMounts:
            - name: minio-storage
              mountPath: /data
      volumes:
        - name: minio-storage
          persistentVolumeClaim:
            claimName: minio-pvc
---
apiVersion: v1
kind: Secret
metadata:
  name: minio-secret
type: Opaque
data:
  MINIO-ROOT-USER: MmU4ODE3MjY2MjYxNjEwODEwNTk2YTUwYjhmNGE4YzU= 
  MINIO-ROOT-PASSWORD: YTUwMzA3MWRlYmZhM2FjMGMxZGUxY2Q3OWY=

--- 
apiVersion: v1
kind: Service
metadata:
  name: minio-service
spec:
  selector:
    app: minio 
  ports:
    - protocol: TCP
      name: minio-tcp-1
      port: 9001
      targetPort: 9001 
    - protocol: TCP
      name: minio-tcp-2
      port: 9000
      targetPort: 9000
  type: LoadBalancer

--- 

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi