apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio 
  template:
    metadata:
      labels:
        app: minio 
    spec:
      containers:
        - name: minio
          image: minio/minio:latest
          ports:
            - containerPort: 9000  # API
            - containerPort: 9001  # Console
          command: ["minio", "server", "--console-address", ":9001", "/data"]
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: MINIO_ROOT_USER
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: MINIO_ROOT_PASSWORD
          volumeMounts:
            - name: minio-storage
              mountPath: /data
      volumes:
        - name: minio-storage
          persistentVolumeClaim:
            claimName: minio-pvc
---
apiVersion: v1
kind: Secret
metadata:
  name: minio-secret
type: Opaque
data:
  MINIO_ROOT_USER: MmU4ODE3MjY2MjYxNjEwODEwNTk2YTUwYjhmNGE4YzU= 
  MINIO_ROOT_PASSWORD: YTUwMzA3MWRlYmZhM2FjMGMxZGUxY2Q3OWY=

--- 
apiVersion: v1
kind: Service
metadata:
  name: paperless-minio
spec:
  type: LoadBalancer
  selector:
    app: minio 
  ports:
    - protocol: TCP
      name: minio-tcp-api
      port: 9000
      targetPort: 9000
    - protocol: TCP
      name: minio-tcp-console
      port: 9001
      targetPort: 9001

--- 

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

# kubectl get svc paperless-minio